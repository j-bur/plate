{
  "name": "heading-element",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "name": "heading-element.tsx",
      "content": "import React from 'react';\nimport { PlateElement, PlateElementProps } from '@udecode/plate-common';\nimport { cva, VariantProps } from 'class-variance-authority';\n\nconst headingVariants = cva('', {\n  variants: {\n    variant: {\n      h1: 'mx-0 mb-1 mt-[2em] text-[1.875em] font-medium leading-[1.3]',\n      h2: 'mx-0 mb-px mt-[1.4em] text-[1.5em] font-medium leading-[1.3]',\n      h3: 'mx-0 mb-px mt-[1em] text-[1.25em] font-medium leading-[1.3] text-[#434343]',\n      h4: 'mx-0 mb-0 mt-[0.75em] text-[1.1em] font-medium leading-[1.3] text-[#666666]',\n      h5: 'mx-0 mb-0 mt-[0.75em] text-[1.1em] font-medium leading-[1.3] text-[#666666]',\n      h6: 'mx-0 mb-0 mt-[0.75em] text-[1.1em] font-medium leading-[1.3] text-[#666666]',\n    },\n    isFirstBlock: {\n      true: 'mt-0',\n      false: '',\n    },\n  },\n});\n\nexport function HeadingElement({\n  className,\n  variant = 'h1',\n  isFirstBlock,\n  children,\n  ...props\n}: PlateElementProps & VariantProps<typeof headingVariants>) {\n  const { element, editor } = props;\n\n  const Element = variant!;\n\n  return (\n    <PlateElement\n      asChild\n      className={headingVariants({\n        variant,\n        className,\n        isFirstBlock: element === editor.children[0],\n      })}\n      {...props}\n    >\n      <Element>{children}</Element>\n    </PlateElement>\n  );\n}\n"
    }
  ],
  "type": "components:ui"
}