{
  "name": "fixed-toolbar-buttons",
  "dependencies": [
    "@udecode/plate-basic-marks",
    "@udecode/plate-font",
    "@udecode/plate-indent-list",
    "@udecode/plate-list",
    "@udecode/plate-media"
  ],
  "registryDependencies": [
    "toolbar",
    "color-dropdown-menu",
    "emoji-dropdown-menu",
    "align-dropdown-menu",
    "comment-toolbar-button",
    "indent-list-toolbar-button",
    "indent-toolbar-button",
    "insert-dropdown-menu",
    "line-height-dropdown-menu",
    "link-toolbar-button",
    "list-toolbar-button",
    "mark-toolbar-button",
    "media-toolbar-button",
    "mode-dropdown-menu",
    "more-dropdown-menu",
    "outdent-toolbar-button",
    "table-dropdown-menu",
    "turn-into-dropdown-menu"
  ],
  "files": [
    {
      "name": "fixed-toolbar-buttons.tsx",
      "content": "import React from 'react';\nimport { isEnabled } from '@/plate/demo/is-enabled';\nimport {\n  MARK_BOLD,\n  MARK_CODE,\n  MARK_ITALIC,\n  MARK_STRIKETHROUGH,\n  MARK_UNDERLINE,\n} from '@udecode/plate-basic-marks';\nimport { usePlateReadOnly } from '@udecode/plate-common';\nimport { MARK_BG_COLOR, MARK_COLOR } from '@udecode/plate-font';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_OL, ELEMENT_UL } from '@udecode/plate-list';\nimport { ELEMENT_IMAGE } from '@udecode/plate-media';\n\nimport { ValueId } from '@/config/setting-values';\nimport { cn } from '@/lib/utils';\nimport { settingsStore } from '@/components/context/settings-store';\nimport { Icons, iconVariants } from '@/components/icons';\n\nimport { AlignDropdownMenu } from './align-dropdown-menu';\nimport { ColorDropdownMenu } from './color-dropdown-menu';\nimport { CommentToolbarButton } from './comment-toolbar-button';\nimport { EmojiDropdownMenu } from './emoji-dropdown-menu';\nimport { IndentListToolbarButton } from './indent-list-toolbar-button';\nimport { IndentToolbarButton } from './indent-toolbar-button';\nimport { InsertDropdownMenu } from './insert-dropdown-menu';\nimport { LineHeightDropdownMenu } from './line-height-dropdown-menu';\nimport { LinkToolbarButton } from './link-toolbar-button';\nimport { ListToolbarButton } from './list-toolbar-button';\nimport { MarkToolbarButton } from './mark-toolbar-button';\nimport { MediaToolbarButton } from './media-toolbar-button';\nimport { ModeDropdownMenu } from './mode-dropdown-menu';\nimport { MoreDropdownMenu } from './more-dropdown-menu';\nimport { OutdentToolbarButton } from './outdent-toolbar-button';\nimport { Separator } from './separator';\nimport { TableDropdownMenu } from './table-dropdown-menu';\nimport { TurnIntoDropdownMenu } from './turn-into-dropdown-menu';\n\ninterface ToolbarGroupProps {\n  noSeparator?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nfunction ToolbarGroup({\n  noSeparator = false,\n  className,\n  children,\n}: ToolbarGroupProps) {\n  const childArr = React.Children.map(children, (c) => c);\n  if (!childArr || childArr.length === 0) return null;\n\n  return (\n    <div className={cn('flex', className)}>\n      {!noSeparator && (\n        <div className=\"h-full py-1\">\n          <Separator orientation=\"vertical\" />\n        </div>\n      )}\n\n      <div className=\"mx-1 flex items-center gap-1\">{children}</div>\n    </div>\n  );\n}\n\nexport function FixedToolbarButtons({ id }: { id?: ValueId }) {\n  const readOnly = usePlateReadOnly();\n  const indentList = settingsStore.use.checkedId(KEY_LIST_STYLE_TYPE);\n\n  return (\n    <div className=\"w-full overflow-hidden\">\n      <div\n        className=\"flex flex-wrap\"\n        style={{\n          // Conceal the first separator on each line using overflow\n          transform: 'translateX(calc(-1px))',\n        }}\n      >\n        {!readOnly && (\n          <>\n            <ToolbarGroup noSeparator>\n              <InsertDropdownMenu />\n              {isEnabled('basicnodes', id) && <TurnIntoDropdownMenu />}\n            </ToolbarGroup>\n\n            <ToolbarGroup>\n              <MarkToolbarButton tooltip=\"Bold (⌘+B)\" nodeType={MARK_BOLD}>\n                <Icons.bold />\n              </MarkToolbarButton>\n              <MarkToolbarButton tooltip=\"Italic (⌘+I)\" nodeType={MARK_ITALIC}>\n                <Icons.italic />\n              </MarkToolbarButton>\n              <MarkToolbarButton\n                tooltip=\"Underline (⌘+U)\"\n                nodeType={MARK_UNDERLINE}\n              >\n                <Icons.underline />\n              </MarkToolbarButton>\n\n              {isEnabled('basicnodes', id) && (\n                <>\n                  <MarkToolbarButton\n                    tooltip=\"Strikethrough (⌘+⇧+M)\"\n                    nodeType={MARK_STRIKETHROUGH}\n                  >\n                    <Icons.strikethrough />\n                  </MarkToolbarButton>\n                  <MarkToolbarButton tooltip=\"Code (⌘+E)\" nodeType={MARK_CODE}>\n                    <Icons.code />\n                  </MarkToolbarButton>\n                </>\n              )}\n\n              {isEnabled('font', id) && (\n                <>\n                  <ColorDropdownMenu nodeType={MARK_COLOR} tooltip=\"Text Color\">\n                    <Icons.color\n                      className={iconVariants({ variant: 'toolbar' })}\n                    />\n                  </ColorDropdownMenu>\n                  <ColorDropdownMenu\n                    nodeType={MARK_BG_COLOR}\n                    tooltip=\"Highlight Color\"\n                  >\n                    <Icons.bg\n                      className={iconVariants({ variant: 'toolbar' })}\n                    />\n                  </ColorDropdownMenu>\n                </>\n              )}\n            </ToolbarGroup>\n\n            <ToolbarGroup>\n              {isEnabled('align', id) && <AlignDropdownMenu />}\n\n              {isEnabled('lineheight', id) && <LineHeightDropdownMenu />}\n\n              {isEnabled('indentlist', id) && indentList && (\n                <>\n                  <IndentListToolbarButton nodeType={ListStyleType.Disc} />\n                  <IndentListToolbarButton nodeType={ListStyleType.Decimal} />\n                </>\n              )}\n\n              {isEnabled('list', id) && !indentList && (\n                <>\n                  <ListToolbarButton nodeType={ELEMENT_UL} />\n                  <ListToolbarButton nodeType={ELEMENT_OL} />\n                </>\n              )}\n\n              {(isEnabled('indent', id) ||\n                isEnabled('list', id) ||\n                isEnabled('indentlist', id)) && (\n                <>\n                  <OutdentToolbarButton />\n                  <IndentToolbarButton />\n                </>\n              )}\n            </ToolbarGroup>\n\n            <ToolbarGroup>\n              {isEnabled('link', id) && <LinkToolbarButton />}\n\n              {isEnabled('media', id) && (\n                <MediaToolbarButton nodeType={ELEMENT_IMAGE} />\n              )}\n\n              {isEnabled('table', id) && <TableDropdownMenu />}\n\n              {isEnabled('emoji', id) && <EmojiDropdownMenu />}\n\n              <MoreDropdownMenu />\n            </ToolbarGroup>\n          </>\n        )}\n\n        <div className=\"grow\" />\n\n        <ToolbarGroup noSeparator>\n          {isEnabled('comment', id) && <CommentToolbarButton />}\n          <ModeDropdownMenu />\n        </ToolbarGroup>\n      </div>\n    </div>\n  );\n}\n"
    }
  ],
  "type": "components:plate-ui"
}